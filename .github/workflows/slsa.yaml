on:
  pull_request_target:
  pull_request:

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/setup-node@master
      - run: |
          npm install
          npm build

      - uses: ./.github/actions/do-a-local-action
        with:
          arg1: ${{ secrets.supersecret1 }}

      - uses: completely/fakeaction@5fd3084fc36e372ff1fff382a39b10d03659f355
        with:
          arg2: ${{ secrets.supersecret2 }}

      - uses: docker://alpine@sha256:402d21757a03a114d273bbe372fa4b9eca567e8b6c332fa7ebf982b902207242

      - uses: completely/fakeaction@5fd3084
        with:
          arg2: ${{ secrets.supersecret2 }}
 
      - uses: fakerepo/comment-on-pr@v1
        with:
          message: |
            Thank you!
 
      - uses: fakerepo/comment-on-pr
        with:
          message: |
            Thank you!

      - uses: docker://gcr.io/cloud-builders/gradle

      - uses: docker://alpine:3.8

      - name: Upload SARIF file for GitHub Advanced Security Dashboard
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: semgrep.sarif
        if: always()

  build2:
    name: Build and test using a local workflow
    uses: ./.github/workflows/use_a_local_workflow.yml@master
    secrets: inherit
    with:
      examplearg: true
  
  docker-build:
    runs-on: ubuntu-latest
    env:
      workdir: lambdas/run-semgrep
    steps:
      - uses: actions/checkout@v2
      - name: Build Docker image
        working-directory:
          ${{ env.workdir }}/src
     
        run: docker build -t semgrep-scanner:latest .
      - name:
          blah
        run: |
          CONTENTS=$(curl https://blah.com)
          eval $CONTENTS
